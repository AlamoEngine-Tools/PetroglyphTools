using System;
using System.Collections.Generic;
using System.Drawing;

namespace PG.StarWarsGame.Files.MTD.Test;

public static class MtdTestData
{
    public static IEnumerable<object[]> InvalidMtdData()
    {
        return
        [
            [
                Array.Empty<byte>()
            ],
            [
                // Incomplete Header
                new byte[]
                {
                    1, 0, 0
                }
            ],
            [
                // Missing entry
                new byte[]
                {
                    1, 0, 0, 0,
                }
            ],
            [
                // Incomplete name part of entry
                new byte[]
                {
                    1, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61
                }
            ],
            [
                // name is 64 chars long (missing \0 terminator)
                new byte[]
                {
                    1, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1
                }
            ],
            [
                // missing entry alpha byte
                new byte[]
                {
                    1, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x00,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0
                }
            ],
            [
                // missing entry 2
                new byte[]
                {
                    2, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x00,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1
                }
            ],
            [
                // Too high X
                new byte[]
                {
                    1, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x00,
                    0xFF, 0xFF, 0xFF, 0xFF,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1
                }
            ],
            [
                // Too high Y
                new byte[]
                {
                    1, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x00,
                    0x1, 0x0, 0x0, 0x0,
                    0xFF, 0xFF, 0xFF, 0xFF,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1
                }
            ],
            [
                // Too high Width
                new byte[]
                {
                    1, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x00,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0xFF, 0xFF, 0xFF, 0xFF,
                    0x1, 0x0, 0x0, 0x0,
                    0x1
                }
            ],
            [
                // Too high Height
                new byte[]
                {
                    1, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x00,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0x1, 0x0, 0x0, 0x0,
                    0xFF, 0xFF, 0xFF, 0xFF,
                    0x1
                }
            ],
        ];
    }

    public static IEnumerable<object[]> ValidMtdData()
    {
        return
        [
            [
                new byte[]
                {
                    0, 0, 0, 0
                },
                new List<MtdEntryInformationContainer>()
            ],
            [
                new byte[]
                {
                    1, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x00,
                    0x1, 0x0, 0x0, 0x0,
                    0x2, 0x0, 0x0, 0x0,
                    0x3, 0x0, 0x0, 0x0,
                    0x4, 0x0, 0x0, 0x0,
                    0x1
                },
                new List<MtdEntryInformationContainer>
                {
                    new()
                    {
                        ExpectedName = new string('a', 63),
                        ExpectedAlpha = true,
                        ExpectedArea = new Rectangle(1,2,3,4)
                    }
                }
            ],
            [
                new byte[]
                {
                    2, 0, 0, 0,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61, 0x61,
                    0x61, 0x61, 0x61, 0x00,
                    0x1, 0x0, 0x0, 0x0,
                    0x2, 0x0, 0x0, 0x0,
                    0x3, 0x0, 0x0, 0x0,
                    0x4, 0x0, 0x0, 0x0,
                    0x0,
                    0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62,
                    0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62,
                    0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62,
                    0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62,
                    0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62,
                    0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62, 0x62,
                    0x62, 0x62, 0x62, 0x00,
                    0x1, 0x0, 0x0, 0x0,
                    0x2, 0x0, 0x0, 0x0,
                    0x3, 0x0, 0x0, 0x0,
                    0x4, 0x0, 0x0, 0x0,
                    0xFF, // Anything but 0 is treated as true
                },
                new List<MtdEntryInformationContainer>
                {
                    new()
                    {
                        ExpectedName = new string('a', 63),
                        ExpectedAlpha = false,
                        ExpectedArea = new Rectangle(1,2,3,4)
                    },
                    new()
                    {
                        ExpectedName = new string('b', 63),
                        ExpectedAlpha = true,
                        ExpectedArea = new Rectangle(1,2,3,4)
                    }
                }
            ]
        ];
    }
}